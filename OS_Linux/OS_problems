进程与线程的区别：
进程是资源分配的单位。系统创建一个进程时会分配给他一部分内存空间。
线程是系统调度的单位。线程是由进程创建的，但是线程没有自己独自的内存，他使用的所有资源和空间都是进程共享的。他比进程小且能独自运行的单位。所以他是系统调度，因为他运行的时候将占用CPU，计算机的计算能力。
一个进程可以包括多个线程。


线程之间的同步：
同步不是说同时一起运行，而是因为在一般情况下，一个线程的建立对于进程没有意义，所以一般是多个线程一起运行。但是由于多个线程一起运行，运用同一堆资源，所以需要进行协调同步，让每个线程能够不互斥的情况下运行下去。
在linux上，有三种方式：
互斥锁：一旦一个线程使用了这个资源，就进行上锁，其他线程访问时就会被阻塞。
信号量：在资源被分配时有一个信号量的数，这个数为0代表没有资源了，如果有线程访问将会被挂起，当数大于0时将会唤醒这个线程。这个数不能为负
条件变量：与互斥锁不同，条件变量不是上锁而是等待。条件变量是与互斥锁一起使用的。
条件变量可以让一个线程睡眠等待一个条件的出现，而不是一直解开互斥锁判断条件，再管返还互斥锁，这样可以节约系统资源。方便使用。

进程之间的通信：
进程之间的通信一是为了同步协调，其次是为了传输数据。ipc通信的方式有

管道：管道是半双工的通信方式，且只能位于父子进程之间传递。一般最常用的管道就是linux中的|，将前面的输出直接传给后面的操作。
命名管道：这个管道也是半双工的，不过不同的是他们可以作用于非亲属进程之间，他是以文件形式存在的，所以可以直接在命令中使用。
信号：信号是一种非常特殊的进程通信方式，他可以通知进程某些事情已发生。
消息队列：消息队列是消息的链表，存放在内核中，他与管道不同的是，及时没有对象，消息队列依然存在，而管道是如果没有目标，就会直接丢弃结果。
信号量：信号量是一个基于锁的形式，控制进程对资源的访问。
共享内存：映射出一个内存区，由一个进程创建，其他多个进程都可以访问，这种通信方式是最快的。

什么是缓存区溢出？有什么危害？
缓存区溢出是指输出的数据超出了程序设定的缓冲区大小。
危害：使程序崩溃，直接执行一段恶意代码。缓冲区溢出是黑客常用的攻击手段之一。

什么是死锁?产生需要什么条件？
死锁指由于两个进程或者多个进程在保持着一些资源的同时，请求着一些在其他进程中的资源，而又不可得，就这样几个进程永远在阻塞和等待中无限循环。
产生的条件一共有四个：
互斥条件（资源只有一个，多个寻求调用）
占有且请求条件（在持有资源的同时，若进程没有得到固定资源而会阻塞下去，切不会放掉持有资源）
不可抢占资源：进程获得的资源，不能强制夺取。
循环等待条件


进程有几种状态：
就绪状态
运行状态
阻塞状态

分段和分页有什么区别
分段是是根据用户需求划分的（逻辑单位，用户可见
而分页是为了管理主存而划分的（物理单位，不可见
段大小不固定，而页的大小是固定的。


进程调度策略有哪些？
FCFS先来先服务，优先级，时间片轮转，多级反馈。


进程同步有哪些方式
原子操作（一旦执行，不会被打断，一直运行到结束）， 信号量，自旋锁（会一直反复检查锁是否可用，处于忙等待状态。） 互斥量， 临界区。

解决死锁的方式？
1.打破互斥条件：允许资源几个进程同时访问，但是对于资源有限的条件来说。没有意义。
2.打破占有并请求条件：让系统在一开始就将所有程序需要的资源都分配给它。如果没有足够资源分配，则进程暂时不运行。
3.打破不可抢占条件：让进程在申请资源不能被满足的情况下释放资源。
4.打破循环等待条件：把资源进行分类编号，在进程申请时，必须占用了小号资源才能申请大号资源，这样就避免了环路的产生。
避免死锁的方法：
安全序列，银行家算法。


孤儿进程：
父进程退出，子进程还在运行。这些进程会变成孤儿进程。孤儿进程会被init进程所收养，对它们完成状态收集工作。所以不会对系统造成危害。

僵尸进程：
子进程退出时，父进程如果没有调用wait或waitpid获取子进程状态信息，那么子进程的描述符将依然保存在系统中，这种被称为僵尸进程。
系统中的进程号是有限的，如果子进程退出父进程不适用wait和waitpid释放子进程的描述符，则变成僵尸进程会一直占用进程号。
